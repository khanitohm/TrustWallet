{
    "github.copilot.nextEditSuggestions.enabled": true,
    "chat.mcp.assisted.nuget.enabled": true,
    "chat.math.enabled": true,
    "python.defaultInterpreterPath": "c:\\Users\\win\\AppData\\Local\\Programs\\Python\\Python313\\python.exe",
    "terminal.integrated.allowChords": false,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "window.confirmBeforeClose": "never",
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 500,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "security.workspace.trust.startupPrompt": "never",
    "git.confirmSync": false,
    "git.confirmForcePush": false,
    "terminal.integrated.confirmOnExit": "never",
    "extensions.ignoreRecommendations": true,
    "update.showReleaseNotes": false,
    "task.allowAutomaticTasks": "on",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "always",
        "source.fixAll": "always"
    },
    "editor.codeActionsOnSaveTimeout": 2000,
    "git.autofetch": true,
    "git.pruneOnFetch": true,
    "git.enableSmartCommit": true,
    "git.suggestSmartCommit": false,
    "git.smartCommitChanges": "all",
    "git.postCommitCommand": "sync",
    "window.restoreWindows": "all",
    "workbench.startupEditor": "none",
    "workbench.editor.enablePreview": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "chat.tools.autoApprove": true,
    "kilo-code.allowedCommands": [
        "\"*\"",
        "nvim c:UserswinDownloadsmoreloginnnvim-init.lua",
        "nvim --headless -c \"Lazy sync\" -c \"qall!\"",
        "where",
        ".moreloginnsetup_neovim.ps1",
        "setx",
        "setx PATH %PATH%",
        "cmd /c echo %PATH%",
        "nvim --version",
        "nvim",
        "choco",
        "iex",
        "start",
        "*",
        "powershell",
        "pwsh",
        "cmd",
        "bash",
        "sh",
        "python",
        "python3",
        "py",
        "python -m pip",
        "pip",
        "pip3",
        "pipx",
        "pip install",
        "pip install -r requirements.txt",
        "pip freeze > requirements.txt",
        "pytest",
        "pytest -q",
        "python -m pytest",
        "black .",
        "isort .",
        "flake8",
        "ruff check .",
        "mypy .",
        "pre-commit run -a",
        "uvicorn main:app --reload",
        "flask run",
        "python -m http.server 8000",
        "node",
        "npm install",
        "npm run",
        "npm run dev",
        "npm run build",
        "npm run start",
        "npx",
        "pnpm install",
        "pnpm dev",
        "pnpm build",
        "pnpm start",
        "yarn",
        "yarn install",
        "yarn dev",
        "yarn build",
        "yarn start",
        "git status",
        "git add -A",
        "git commit -m",
        "git push",
        "git pull",
        "git fetch",
        "git clone",
        "git switch",
        "git checkout",
        "git merge",
        "git rebase",
        "git stash",
        "docker ps",
        "docker build",
        "docker run",
        "docker logs",
        "docker stop",
        "docker compose up",
        "docker compose down",
        "docker-compose up",
        "docker-compose down",
        "curl",
        "wget",
        "Invoke-WebRequest",
        "Invoke-RestMethod",
        "which",
        "set",
        "explorer .",
        "start .",
        "code .",
        "winget",
        "scoop",
        "vim",
        "code",
        "python app.py",
        "python main.py",
        "python server.py",
        "python app_parallel.py",
        "python app_headless.py",
        "python app_enhanced.py",
        "playwright install",
        "playwright",
        "python main.py --site amazon_th --persona th",
        "type configsecret.key",
        "type",
        "del configsecret.key",
        "del",
        "python utils/crypto.py",
        "python temp_encrypt.py",
        "del temp_encrypt.py",
        "npx playwright-mcp",
        "cd",
        "python main.py --site louisvuitton_th --persona th",
        "cd c:UserswinDesktopREALINGECT",
        "tree /f",
        "tree",
        "python ui/examples/orchestrator_examples.py post",
        "python ../../ui/app.py",
        "rem Process is running, waiting for completion...",
        "rem",
        "rem Process",
        "rem Process is"
    ],
    "kilo-code.deniedCommands": [],
    "github.copilot.enable": {
        "*": false,
        "plaintext": false,
        "markdown": false,
        "scminput": false
    },
    "python-envs.defaultEnvManager": "ms-python.python:system",
    "python-envs.pythonProjects": [],
    "chat.mcp.autostart": "newAndOutdated",
    "chat.agent.maxRequests": 100,
    "mcpServers": {
        "github": {
            "command": "npx",
            "env": {
                "GITHUB_PERSONAL_ACCESS_TOKEN": "YOUR_TOKEN_HERE",
                "GITHUB_FULL_ACCESS": "true"
            },
            "args": [
                "-y",
                "@modelcontextprotocol/server-github"
            ]
        },
        "brave-search": {
            "command": "npx",
            "env": {
                "BRAVE_API_KEY": "BSAVUNrmZCNlqurvf6uc2cshwG2cxpc",
                "BRAVE_SEARCH_UNLIMITED": "true"
            },
            "args": [
                "-y",
                "@modelcontextprotocol/server-brave-search"
            ]
        },
        "playwright-mcp": {
            "command": "npx",
            "env": {
                "PLAYWRIGHT_HEADLESS": "false",
                "PLAYWRIGHT_VIDEO_RECORD": "false",
                "PLAYWRIGHT_SCREENSHOT_RECORD": "true",
                "PLAYWRIGHT_VISION_ENABLED": "true",
                "PLAYWRIGHT_FULL_ACCESS": "true"
            },
            "args": [
                "-y",
                "playwright-mcp"
            ]
        },
        "sequentialthinking": {
            "command": "npx",
            "env": {
                "SEQUENTIAL_THINKING_UNLIMITED": "true"
            },
            "args": [
                "-y",
                "@modelcontextprotocol/server-sequential-thinking"
            ]
        }
    }
}
